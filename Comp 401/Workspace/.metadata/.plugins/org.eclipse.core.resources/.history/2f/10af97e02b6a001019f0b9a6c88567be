public class StringPermutationIterator {
	
	
	String buffer;
	
	public StringPermutationIterator(String s){
		buffer = s;
	}

	public boolean hasNext() {
		return buffer != null;
	}

	public String next() {
		String result = buffer;
		buffer = createNextElement();
		return result;
	}
	public String createNextElement(){
		return createNextElementHelper(0);
	}
	private String createNextElementHelper(int index ){
		//for (int index =0; index< buffer.length(); index++){
		StringPermutationIterator newSPI;
		if (index<buffer.length()-1)	{
			//StringPermutationIterator newSPI;
			String substring = buffer.substring(0,index-1)+buffer.substring(index+1,buffer.length());
				if (index==0)
					newSPI = new StringPermutationIterator(buffer.substring(index+1));
				else
					newSPI = new StringPermutationIterator(substring);
			
			while(newSPI.hasNext())	
				return buffer.charAt(index) + newSPI.next();
			createNextElementHelper(index+1);
		}
		return "";
	}
}

	


