/**
 * @author Aaron M Davis
 * last edited: 11/15/11
 */
import java.util.ArrayList;
import java.util.HashMap;


public class TheGraph {
	/* Data Members
	 * @num will be where in the list of vertices the next vertex will go
	 * @listNames will contain the String names of the vertices as the keys 
	 * and the index of the vertex with that name as the object of that key
	 * @listVert will contain all of the GVertex's in the graph
	 */
	int num = 0;
	static HashMap listNames = new HashMap(23, (float)0.5);
	static ArrayList<GVertex> listVert = new ArrayList<GVertex>();
	
	//Constructor 
	public TheGraph(){
		;
	}
	
	/**
	 * add will add a nex GVertex to the graph
	 * @param s is the String name of the Vertex
	 * First, make a new GVertex with s as it's elt
	 * Map the @num (index in @listVert) of the Vertex to the 
	 * String name in HashMap @listNames
	 * Add the GVertex to @listVert at location @num
	 * Increment @num
	 */
	public void add(String s){
		GVertex v = new GVertex(s);
		listNames.put(s, num);
		listVert.add(v);
		num++;
	}
	public int size(){
		return listVert.size();
	}
	/**
	 * @param source
	 * @param dest
	 * @param weight
	 * Calls the addAdj method in GVertex class on the source node 
	 */
	public void addAdjac(String source, String dest, int weight){
		listVert.get((Integer) TheGraph.listNames.get(source)).addAdj(dest, weight);
	  //listVert.get((Integer) TheGraph.listNames.get(source)) is the source node if the edge
	}
	
	/**
	 * @param s is the String name of the Vertex
	 * @return the object GVertex associated with the String s
	 */
	
	public GVertex getVert(String s){
		return listVert.get((Integer) listNames.get(s));
	}	
	
}
